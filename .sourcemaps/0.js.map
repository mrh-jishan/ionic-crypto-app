{"version":3,"sources":["../../src/pages/upcoming-coin/upcoming-coin.module.ts","../../node_modules/@ionic-native/in-app-browser/index.js","../../src/pages/upcoming-coin/upcoming-coin.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAuC;AACO;AACG;AACmB;AACV;AAa1D;IAAA;IACA,CAAC;IADY,sBAAsB;QAXlC,uEAAQ,CAAC;YACN,YAAY,EAAE;gBACV,wEAAgB;aACnB;YACD,OAAO,EAAE;gBACL,sEAAe,CAAC,QAAQ,CAAC,wEAAgB,CAAC;gBAC1C,uFAAgB;aACnB,EAAE,SAAS,EAAE;gBACV,kFAAY;aACf;SACJ,CAAC;OACW,sBAAsB,CAClC;IAAD,6BAAC;CAAA;AADkC;;;;;;;;;;;;;ACjBnC;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AAC+C;AAC/C;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,sBAAsB,OAAO;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,mBAAmB;AACnB;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa,WAAW,GAAG;AACpD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,uBAAuB,OAAO;AAC9B,wBAAwB,OAAO;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B,yBAAyB,OAAO;AAChC,0BAA0B,OAAO;AACjC;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B,yBAAyB,OAAO;AAChC,0BAA0B,OAAO;AACjC;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,aAAa,WAAW,GAAG;AACxD,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1SwC;AACU;AACK;AACG;AAG1D;;;;;GAKG;AAOH;IAKI,0BACY,YAA0B,EAC1B,GAAiB,EACjB,WAA8B;QAF9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,QAAG,GAAH,GAAG,CAAc;QACjB,gBAAW,GAAX,WAAW,CAAmB;QANlC,aAAQ,GAAQ,EAAE,CAAC;QAOvB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAEO,sCAAW,GAAnB;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACnC,OAAO,EAAE,gBAAgB;SAC5B,CAAC,CAAC;IACP,CAAC;IAEa,mCAAQ,GAAtB,UAAuB,SAAU;;;;;;wBAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,qBAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;;wBAA5B,SAA4B,CAAC;wBAC7B,qBAAM,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,UAAC,GAAQ;gCACpD,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC;4BACrC,CAAC,CAAC;;wBAFF,SAEE,CAAC;wBACH,IAAI,SAAS;4BAAE,SAAS,CAAC,QAAQ,EAAE,CAAC;wBACpC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;;;;;KAC1B;IAED,wCAAa,GAAb,UAAc,IAAI;QACd,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACvC,CAAC;IA9BQ,gBAAgB;QAJ5B,wEAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;WACG;SACpC,CAAC;+FAOwC;YACrB,wEAAY;YACJ,aAAiB;OARjC,gBAAgB,CA+B5B;IAAD,CAAC;AAAA;SA/BY,gBAAgB,gB","file":"0.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {IonicPageModule} from 'ionic-angular';\nimport {UpcomingCoinPage} from './upcoming-coin';\nimport {ComponentsModule} from \"../../components/components.module\";\nimport {InAppBrowser} from \"@ionic-native/in-app-browser\";\n\n@NgModule({\n    declarations: [\n        UpcomingCoinPage,\n    ],\n    imports: [\n        IonicPageModule.forChild(UpcomingCoinPage),\n        ComponentsModule\n    ], providers: [\n        InAppBrowser\n    ]\n})\nexport class UpcomingCoinPageModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/upcoming-coin/upcoming-coin.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { CordovaInstance, InstanceCheck, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @hidden\n */\nvar InAppBrowserObject = (function () {\n    /**\n     * Opens a URL in a new InAppBrowser instance, the current browser instance, or the system browser.\n     * @param {string} url     The URL to load.\n     * @param {string} [target=\"self\"]  The target in which to load the URL, an optional parameter that defaults to _self.\n     *                 _self: Opens in the WebView if the URL is in the white list, otherwise it opens in the InAppBrowser.\n     *                 _blank: Opens in the InAppBrowser.\n     *                 _system: Opens in the system's web browser.\n     * @param {string | InAppBrowserOptions} [options] Options for the InAppBrowser. Optional, defaulting to: location=yes.\n     *                 The options string must not contain any blank space, and each feature's\n     *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\n     */\n    function InAppBrowserObject(url, target, options) {\n        try {\n            if (options && typeof options !== 'string') {\n                options = Object.keys(options)\n                    .map(function (key) { return key + \"=\" + options[key]; })\n                    .join(',');\n            }\n            this._objectInstance = cordova.InAppBrowser.open(url, target, options);\n        }\n        catch (e) {\n            window.open(url, target);\n            console.warn('Native: InAppBrowser is not installed or you are running on a browser. Falling back to window.open.');\n        }\n    }\n    /**\n     * Displays an InAppBrowser window that was opened hidden. Calling this has no effect\n     * if the InAppBrowser was already visible.\n     */\n    /**\n       * Displays an InAppBrowser window that was opened hidden. Calling this has no effect\n       * if the InAppBrowser was already visible.\n       */\n    InAppBrowserObject.prototype.show = /**\n       * Displays an InAppBrowser window that was opened hidden. Calling this has no effect\n       * if the InAppBrowser was already visible.\n       */\n    function () { };\n    /**\n     * Closes the InAppBrowser window.\n     */\n    /**\n       * Closes the InAppBrowser window.\n       */\n    InAppBrowserObject.prototype.close = /**\n       * Closes the InAppBrowser window.\n       */\n    function () { };\n    /**\n     * Hides an InAppBrowser window that is currently shown. Calling this has no effect\n     * if the InAppBrowser was already hidden.\n     */\n    /**\n       * Hides an InAppBrowser window that is currently shown. Calling this has no effect\n       * if the InAppBrowser was already hidden.\n       */\n    InAppBrowserObject.prototype.hide = /**\n       * Hides an InAppBrowser window that is currently shown. Calling this has no effect\n       * if the InAppBrowser was already hidden.\n       */\n    function () { };\n    /**\n     * Injects JavaScript code into the InAppBrowser window.\n     * @param script {Object} Details of the script to run, specifying either a file or code key.\n     * @returns {Promise<any>}\n     */\n    /**\n       * Injects JavaScript code into the InAppBrowser window.\n       * @param script {Object} Details of the script to run, specifying either a file or code key.\n       * @returns {Promise<any>}\n       */\n    InAppBrowserObject.prototype.executeScript = /**\n       * Injects JavaScript code into the InAppBrowser window.\n       * @param script {Object} Details of the script to run, specifying either a file or code key.\n       * @returns {Promise<any>}\n       */\n    function (script) {\n        return;\n    };\n    /**\n     * Injects CSS into the InAppBrowser window.\n     * @param css {Object} Details of the script to run, specifying either a file or code key.\n     * @returns {Promise<any>}\n     */\n    /**\n       * Injects CSS into the InAppBrowser window.\n       * @param css {Object} Details of the script to run, specifying either a file or code key.\n       * @returns {Promise<any>}\n       */\n    InAppBrowserObject.prototype.insertCSS = /**\n       * Injects CSS into the InAppBrowser window.\n       * @param css {Object} Details of the script to run, specifying either a file or code key.\n       * @returns {Promise<any>}\n       */\n    function (css) {\n        return;\n    };\n    /**\n     * A method that allows you to listen to events happening in the browser.\n     * @param event {string} Name of the event\n     * @returns {Observable<InAppBrowserEvent>} Returns back an observable that will listen to the event on subscribe, and will stop listening to the event on unsubscribe.\n     */\n    /**\n       * A method that allows you to listen to events happening in the browser.\n       * @param event {string} Name of the event\n       * @returns {Observable<InAppBrowserEvent>} Returns back an observable that will listen to the event on subscribe, and will stop listening to the event on unsubscribe.\n       */\n    InAppBrowserObject.prototype.on = /**\n       * A method that allows you to listen to events happening in the browser.\n       * @param event {string} Name of the event\n       * @returns {Observable<InAppBrowserEvent>} Returns back an observable that will listen to the event on subscribe, and will stop listening to the event on unsubscribe.\n       */\n    function (event) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._objectInstance.addEventListener(event, observer.next.bind(observer));\n            return function () {\n                return _this._objectInstance.removeEventListener(event, observer.next.bind(observer));\n            };\n        });\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], InAppBrowserObject.prototype, \"show\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], InAppBrowserObject.prototype, \"close\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], InAppBrowserObject.prototype, \"hide\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], InAppBrowserObject.prototype, \"executeScript\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], InAppBrowserObject.prototype, \"insertCSS\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Observable)\n    ], InAppBrowserObject.prototype, \"on\", null);\n    return InAppBrowserObject;\n}());\nexport { InAppBrowserObject };\n/**\n * @name In App Browser\n * @description Launches in app Browser\n * @usage\n * ```typescript\n * import { InAppBrowser } from '@ionic-native/in-app-browser';\n *\n * constructor(private iab: InAppBrowser) { }\n *\n *\n * ...\n *\n *\n * const browser = this.iab.create('https://ionicframework.com/');\n *\n * browser.executeScript(...);\n *\n * browser.insertCSS(...);\n * browser.on('loadstop').subscribe(event => {\n *    browser.insertCSS({ code: \"body{color: red;\" });\n * });\n *\n * browser.close();\n *\n * ```\n * @classes\n * InAppBrowserObject\n * @interfaces\n * InAppBrowserEvent\n * InAppBrowserOptions\n */\nvar InAppBrowser = (function (_super) {\n    __extends(InAppBrowser, _super);\n    function InAppBrowser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Opens a URL in a new InAppBrowser instance, the current browser instance, or the system browser.\n     * @param  url {string}     The URL to load.\n     * @param  target {string}  The target in which to load the URL, an optional parameter that defaults to _self.\n     * @param  options {string} Options for the InAppBrowser. Optional, defaulting to: location=yes.\n     *                 The options string must not contain any blank space, and each feature's\n     *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\n     * @returns {InAppBrowserObject}\n     */\n    /**\n       * Opens a URL in a new InAppBrowser instance, the current browser instance, or the system browser.\n       * @param  url {string}     The URL to load.\n       * @param  target {string}  The target in which to load the URL, an optional parameter that defaults to _self.\n       * @param  options {string} Options for the InAppBrowser. Optional, defaulting to: location=yes.\n       *                 The options string must not contain any blank space, and each feature's\n       *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\n       * @returns {InAppBrowserObject}\n       */\n    InAppBrowser.prototype.create = /**\n       * Opens a URL in a new InAppBrowser instance, the current browser instance, or the system browser.\n       * @param  url {string}     The URL to load.\n       * @param  target {string}  The target in which to load the URL, an optional parameter that defaults to _self.\n       * @param  options {string} Options for the InAppBrowser. Optional, defaulting to: location=yes.\n       *                 The options string must not contain any blank space, and each feature's\n       *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\n       * @returns {InAppBrowserObject}\n       */\n    function (url, target, options) {\n        return new InAppBrowserObject(url, target, options);\n    };\n    InAppBrowser.decorators = [\n        { type: Injectable },\n    ];\n    /**\n     * @name In App Browser\n     * @description Launches in app Browser\n     * @usage\n     * ```typescript\n     * import { InAppBrowser } from '@ionic-native/in-app-browser';\n     *\n     * constructor(private iab: InAppBrowser) { }\n     *\n     *\n     * ...\n     *\n     *\n     * const browser = this.iab.create('https://ionicframework.com/');\n     *\n     * browser.executeScript(...);\n     *\n     * browser.insertCSS(...);\n     * browser.on('loadstop').subscribe(event => {\n     *    browser.insertCSS({ code: \"body{color: red;\" });\n     * });\n     *\n     * browser.close();\n     *\n     * ```\n     * @classes\n     * InAppBrowserObject\n     * @interfaces\n     * InAppBrowserEvent\n     * InAppBrowserOptions\n     */\n    InAppBrowser = __decorate([\n        Plugin({\n            pluginName: 'InAppBrowser',\n            plugin: 'cordova-plugin-inappbrowser',\n            pluginRef: 'cordova.InAppBrowser',\n            repo: 'https://github.com/apache/cordova-plugin-inappbrowser',\n            platforms: ['AmazonFire OS', 'Android', 'Browser', 'iOS', 'macOS', 'Windows']\n        })\n    ], InAppBrowser);\n    return InAppBrowser;\n}(IonicNativePlugin));\nexport { InAppBrowser };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/in-app-browser/index.js\n// module id = 694\n// module chunks = 0 1","import {Component} from '@angular/core';\nimport {IonicPage, LoadingController} from 'ionic-angular';\nimport {CoinProvider} from \"../../providers/providers\";\nimport {InAppBrowser} from '@ionic-native/in-app-browser';\n\n\n/**\n * Generated class for the UpcomingCoinPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n    selector: 'page-upcoming-coin',\n    templateUrl: 'upcoming-coin.html',\n})\nexport class UpcomingCoinPage {\n\n    private coinList: any = [];\n    private loading: any;\n\n    constructor(\n        private coinProvider: CoinProvider,\n        private iab: InAppBrowser,\n        private loadingCtrl: LoadingController) {\n        this.loadCoin();\n    }\n\n    private initLoading() {\n        this.loading = this.loadingCtrl.create({\n            content: 'Please wait...'\n        });\n    }\n\n    private async loadCoin(refresher?) {\n        this.initLoading();\n        await this.loading.present();\n        await this.coinProvider.getUpcomingCoin().then((res: any) => {\n            this.coinList = res.ico.upcoming;\n        });\n        if (refresher) refresher.complete();\n        this.loading.dismiss();\n    }\n\n    openInBrowser(coin) {\n        this.iab.create(coin.website_link);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/upcoming-coin/upcoming-coin.ts"],"sourceRoot":""}